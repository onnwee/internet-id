name: E2E Tests

# Run E2E tests on:
# 1. Manual trigger (workflow_dispatch)
# 2. Pull requests (commented out by default to avoid requiring test environment)
# 3. After preview deployments are ready (requires deployment setup)
on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'Base URL to test against (default: http://localhost:3000)'
        required: false
        default: 'http://localhost:3000'
      api_base_url:
        description: 'API Base URL (default: http://localhost:3001)'
        required: false
        default: 'http://localhost:3001'
  # Uncomment to run on pull requests (requires test environment setup)
  # pull_request:
  #   branches:
  #     - main

permissions:
  contents: read

jobs:
  e2e:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: internetid
          POSTGRES_PASSWORD: internetid
          POSTGRES_DB: internetid_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      DATABASE_URL: postgresql://internetid:internetid@localhost:5432/internetid_test?schema=public
      BASE_URL: ${{ github.event.inputs.base_url || 'http://localhost:3000' }}
      NEXT_PUBLIC_API_BASE: ${{ github.event.inputs.api_base_url || 'http://localhost:3001' }}
      CI: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install root dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Install web dependencies
        working-directory: web
        run: npm ci --legacy-peer-deps
      
      - name: Install Playwright browsers
        working-directory: web
        run: npx playwright install --with-deps chromium firefox webkit
      
      - name: Generate Prisma client
        run: npm run db:generate
      
      - name: Run database migrations
        run: npx prisma migrate deploy
      
      - name: Build Next.js app
        working-directory: web
        run: npm run build
        env:
          NEXTAUTH_SECRET: test-secret-for-ci-only
          NEXTAUTH_URL: http://localhost:3000
      
      - name: Start API server in background
        run: |
          npm run start:api &
          echo "Waiting for API server to start..."
          timeout 30 bash -c 'until curl -f http://localhost:3001/api/health; do sleep 2; done' || true
        env:
          NODE_ENV: test
          API_KEY: test-api-key
      
      - name: Start Next.js server in background
        working-directory: web
        run: |
          npm run start &
          echo "Waiting for Next.js server to start..."
          timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'
        env:
          NEXTAUTH_SECRET: test-secret-for-ci-only
          NEXTAUTH_URL: http://localhost:3000
          NODE_ENV: production
      
      - name: Run E2E tests
        working-directory: web
        run: npm run test:e2e
        env:
          BASE_URL: http://localhost:3000
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: web/playwright-report/
          retention-days: 30
      
      - name: Upload test screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots
          path: web/test-results/
          retention-days: 7

  # Optional: Run E2E tests against preview deployment
  # Requires Vercel/Netlify deployment setup
  e2e-preview:
    name: E2E Tests (Preview Deployment)
    runs-on: ubuntu-latest
    # Only run if preview deployment URL is available
    if: github.event_name == 'pull_request' && false # Disabled by default
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install web dependencies
        working-directory: web
        run: npm ci --legacy-peer-deps
      
      - name: Install Playwright browsers
        working-directory: web
        run: npx playwright install --with-deps chromium firefox webkit
      
      # Wait for preview deployment (example for Vercel)
      # Requires VERCEL_TOKEN secret
      # - name: Wait for Vercel preview deployment
      #   uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     max_timeout: 300
      
      - name: Run E2E tests against preview
        working-directory: web
        run: npm run test:e2e
        env:
          # BASE_URL: ${{ steps.wait-for-vercel.outputs.url }}
          BASE_URL: https://preview-deployment.example.com
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-preview
          path: web/playwright-report/
          retention-days: 30
