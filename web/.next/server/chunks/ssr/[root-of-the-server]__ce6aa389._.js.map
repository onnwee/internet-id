{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/patrick/Documents/Code/onnwee/internet-id/web/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nconst API_BASE = process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:3001\";\nconst API_KEY = process.env.NEXT_PUBLIC_API_KEY;\n\nconst PLATFORM_OPTIONS = [\n  \"youtube\",\n  \"tiktok\",\n  \"instagram\",\n  \"x\",\n  \"twitter\",\n  \"vimeo\",\n  \"twitch\",\n  \"facebook\",\n  \"reddit\",\n  \"pinterest\",\n  \"dailymotion\",\n  \"rumble\",\n  \"bilibili\",\n  \"douyin\",\n  \"kuaishou\",\n  \"weibo\",\n  \"threads\",\n  \"bluesky\",\n  \"mastodon\",\n];\n\nfunction explorerTxUrl(\n  chainId: number | undefined,\n  txHash: string | undefined\n) {\n  if (!txHash) return undefined;\n  switch (chainId) {\n    case 1:\n      return `https://etherscan.io/tx/${txHash}`;\n    case 11155111:\n      return `https://sepolia.etherscan.io/tx/${txHash}`;\n    case 8453:\n      return `https://basescan.org/tx/${txHash}`;\n    case 84532:\n      return `https://sepolia.basescan.org/tx/${txHash}`;\n    default:\n      return undefined;\n  }\n}\nfunction explorerAddressUrl(\n  chainId: number | undefined,\n  address: string | undefined\n) {\n  if (!address) return undefined;\n  switch (chainId) {\n    case 1:\n      return `https://etherscan.io/address/${address}`;\n    case 11155111:\n      return `https://sepolia.etherscan.io/address/${address}`;\n    case 8453:\n      return `https://basescan.org/address/${address}`;\n    case 84532:\n      return `https://sepolia.basescan.org/address/${address}`;\n    default:\n      return undefined;\n  }\n}\n\nfunction ipfsToGateway(uri: string | undefined) {\n  if (!uri) return undefined;\n  if (uri.startsWith(\"ipfs://\")) {\n    const p = uri.replace(\"ipfs://\", \"\");\n    return `https://ipfs.io/ipfs/${p}`;\n  }\n  return uri;\n}\n\nfunction platformBindingUrl(platform?: string, platformId?: string) {\n  if (!platform || !platformId) return undefined;\n  // If platformId is already an absolute URL, return it directly\n  if (/^https?:\\/\\//i.test(platformId)) return platformId;\n  const p = platform.toLowerCase();\n  if (p === \"youtube\") {\n    return `https://www.youtube.com/watch?v=${platformId}`;\n  }\n  if (p === \"x\" || p === \"twitter\") {\n    if (/^\\d+$/.test(platformId)) return `https://x.com/i/status/${platformId}`;\n    return `https://x.com/${platformId}`;\n  }\n  if (p === \"tiktok\") {\n    // Normalize potential URL-like platformId (strip protocol, domain, query, fragment)\n    const raw = platformId.trim();\n    // If it's already an absolute URL, return as-is\n    if (/^https?:\\/\\//i.test(raw)) {\n      try {\n        const u = new URL(raw);\n        // Normalize host variations like m.tiktok.com, vm.tiktok.com -> www.tiktok.com when possible\n        const host = /tiktok\\.com$/i.test(u.hostname)\n          ? \"www.tiktok.com\"\n          : u.hostname;\n        // Prefer path /@user/video/<id> if present; also handle /video/<id> short form\n        let path = u.pathname.replace(/^\\/+/, \"\");\n        // Convert /video/<id> to /@_/video/<id> as a generic canonical if no username\n        path = path.replace(/^video\\/(\\d+)$/i, \"@_/video/$1\");\n        // Strip trailing slashes\n        path = path.replace(/\\/$/, \"\");\n        return `https://${host}/${path}`;\n      } catch {\n        return raw;\n      }\n    }\n    // If numeric only, assume it's a video id without a username\n    if (/^\\d+$/i.test(raw)) return `https://www.tiktok.com/@_/video/${raw}`;\n    // If starts with @ and includes /video/<id>\n    if (/^@[^/]+\\/video\\/\\d+$/i.test(raw))\n      return `https://www.tiktok.com/${raw}`;\n    // If just video/<id>\n    if (/^video\\/\\d+$/i.test(raw))\n      return `https://www.tiktok.com/@_/video/${raw.split(\"/\")[1]}`;\n    // If it's a username only\n    if (/^@[^/]+$/i.test(raw)) return `https://www.tiktok.com/${raw}`;\n    // Fallback: treat as path segment (e.g., @user/video/123 or other patterns)\n    return `https://www.tiktok.com/${raw.replace(/^\\/+/, \"\")}`;\n  }\n  if (p === \"instagram\" || p === \"ig\") {\n    // ID can be /p/<shortcode>, /reel/<id>, or username\n    if (/^p\\//i.test(platformId) || /^reel\\//i.test(platformId))\n      return `https://www.instagram.com/${platformId}`;\n    return `https://www.instagram.com/${platformId}`;\n  }\n  if (p === \"facebook\" || p === \"fb\") {\n    return `https://www.facebook.com/${platformId}`;\n  }\n  if (p === \"vimeo\") {\n    if (/^\\d+$/.test(platformId)) return `https://vimeo.com/${platformId}`;\n    return `https://vimeo.com/${platformId}`;\n  }\n  if (p === \"twitch\") {\n    // Could be channel or video\n    if (/^videos\\//i.test(platformId))\n      return `https://www.twitch.tv/${platformId}`;\n    return `https://www.twitch.tv/${platformId}`;\n  }\n  if (p === \"linkedin\") {\n    return `https://www.linkedin.com/${platformId}`;\n  }\n  if (p === \"snapchat\" || p === \"snap\") {\n    return `https://www.snapchat.com/add/${platformId}`;\n  }\n  if (p === \"reddit\") {\n    return `https://www.reddit.com/${platformId}`;\n  }\n  if (p === \"pinterest\") {\n    return `https://www.pinterest.com/${platformId}`;\n  }\n  if (p === \"dailymotion\") {\n    return `https://www.dailymotion.com/${platformId}`;\n  }\n  if (p === \"rumble\") {\n    return `https://rumble.com/${platformId}`;\n  }\n  if (p === \"bilibili\") {\n    return `https://www.bilibili.com/${platformId}`;\n  }\n  if (p === \"douyin\") {\n    return `https://www.douyin.com/${platformId}`;\n  }\n  if (p === \"kuaishou\") {\n    return `https://www.kuaishou.com/${platformId}`;\n  }\n  if (p === \"weibo\") {\n    return `https://weibo.com/${platformId}`;\n  }\n  if (p === \"threads\") {\n    return `https://www.threads.net/${platformId}`;\n  }\n  if (p === \"bluesky\") {\n    return `https://bsky.app/profile/${platformId}`;\n  }\n  if (p === \"mastodon\") {\n    // Expect instance/path in platformId\n    return `https://${platformId}`;\n  }\n  return undefined;\n}\n\nfunction CopyButton({ text, label }: { text?: string; label?: string }) {\n  const [copied, setCopied] = useState(false);\n  const canCopy = Boolean(text);\n  return (\n    <button\n      style={{ marginLeft: 6, fontSize: 12, padding: \"2px 6px\" }}\n      disabled={!canCopy}\n      onClick={async () => {\n        if (!text) return;\n        try {\n          await navigator.clipboard.writeText(text);\n          setCopied(true);\n          // Fire a global event so Home can show a toast\n          if (typeof window !== \"undefined\") {\n            window.dispatchEvent(\n              new CustomEvent(\"copied\", { detail: { text, label } })\n            );\n          }\n          setTimeout(() => setCopied(false), 1500);\n        } catch {}\n      }}\n      title={canCopy ? `Copy ${label || \"value\"}` : \"Nothing to copy\"}\n    >\n      {copied ? \"Copied\" : \"Copy\"}\n    </button>\n  );\n}\n\nasync function postJson<T>(path: string, body: any): Promise<T> {\n  const res = await fetch(`${API_BASE}${path}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(API_KEY ? { \"x-api-key\": API_KEY } : {}),\n    },\n    body: JSON.stringify(body),\n  });\n  if (!res.ok) throw new Error(await res.text());\n  return res.json();\n}\n\nasync function postMultipart<T>(path: string, form: FormData): Promise<T> {\n  const res = await fetch(`${API_BASE}${path}`, {\n    method: \"POST\",\n    headers: {\n      ...(API_KEY ? { \"x-api-key\": API_KEY } : {}),\n    },\n    body: form,\n  });\n  if (!res.ok) throw new Error(await res.text());\n  return res.json();\n}\n\nasync function getJson<T>(path: string): Promise<T> {\n  const res = await fetch(`${API_BASE}${path}`, {\n    method: \"GET\",\n    headers: {\n      ...(API_KEY ? { \"x-api-key\": API_KEY } : {}),\n    },\n  });\n  if (!res.ok) throw new Error(await res.text());\n  return res.json();\n}\n\nexport default function Home() {\n  const [tab, setTab] = useState<string>(\"upload\");\n  const [browseRefreshKey, setBrowseRefreshKey] = useState(0);\n  const [toast, setToast] = useState<string | null>(null);\n  const [chainId, setChainId] = useState<number | undefined>(undefined);\n\n  useEffect(() => {\n    // Fetch network chainId once for explorer links\n    getJson<{ chainId: number }>(\"/api/network\")\n      .then((r) => setChainId(r.chainId))\n      .catch(() => {});\n    // Listen for copy confirmations\n    const handler = (e: Event) => {\n      const detail = (e as CustomEvent).detail as {\n        text?: string;\n        label?: string;\n      };\n      const what = detail?.label || \"value\";\n      setToast(`${what} copied to clipboard`);\n      setTimeout(() => setToast(null), 1500);\n    };\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"copied\", handler as EventListener);\n    }\n    return () => {\n      if (typeof window !== \"undefined\") {\n        window.removeEventListener(\"copied\", handler as EventListener);\n      }\n    };\n  }, []);\n  return (\n    <main>\n      <h1>Internet-ID</h1>\n      {toast && (\n        <div\n          style={{\n            background: \"#e6ffed\",\n            color: \"#1a7f37\",\n            padding: 8,\n            borderRadius: 4,\n            marginBottom: 8,\n          }}\n        >\n          {toast}\n        </div>\n      )}\n      <div className=\"tabs\">\n        {[\n          [\"upload\", \"Upload\"],\n          [\"one\", \"One-shot\"],\n          [\"manifest\", \"Manifest\"],\n          [\"register\", \"Register\"],\n          [\"verify\", \"Verify\"],\n          [\"proof\", \"Proof\"],\n          [\"bind\", \"Bind\"],\n          [\"browse\", \"Browse\"],\n          [\"verifications\", \"Verifications\"],\n        ].map(([key, label]) => (\n          <button\n            key={key}\n            onClick={() => setTab(key)}\n            className={tab === key ? \"active\" : \"\"}\n          >\n            {label}\n          </button>\n        ))}\n      </div>\n      {tab === \"upload\" && <UploadForm />}\n      {tab === \"one\" && (\n        <OneShotForm\n          onComplete={() => {\n            setToast(\n              \"One-shot complete: uploaded, manifested, and registered.\"\n            );\n            setBrowseRefreshKey((n) => n + 1);\n            setTimeout(() => setToast(null), 3500);\n          }}\n        />\n      )}\n      {tab === \"manifest\" && <ManifestForm />}\n      {tab === \"register\" && <RegisterForm />}\n      {tab === \"verify\" && <VerifyForm />}\n      {tab === \"proof\" && <ProofForm />}\n      {tab === \"bind\" && <BindForm />}\n      {tab === \"browse\" && (\n        <BrowseContents refreshKey={browseRefreshKey} chainId={chainId} />\n      )}\n      {tab === \"verifications\" && <VerificationsView />}\n    </main>\n  );\n}\n\nfunction UploadForm() {\n  const [file, setFile] = useState<File | null>(null);\n  const [result, setResult] = useState<any>(null);\n  const [err, setErr] = useState<string | null>(null);\n  return (\n    <section>\n      <h2>Upload to IPFS</h2>\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files?.[0] || null)}\n      />\n      <div>\n        <button\n          disabled={!file}\n          onClick={async () => {\n            try {\n              setErr(null);\n              const fd = new FormData();\n              if (!file) return;\n              fd.append(\"file\", file);\n              const r = await postMultipart<{ cid: string; uri: string }>(\n                \"/api/upload\",\n                fd\n              );\n              setResult(r);\n            } catch (e: any) {\n              setErr(e?.message || String(e));\n            }\n          }}\n        >\n          Upload\n        </button>\n      </div>\n      {result && <pre>{JSON.stringify(result, null, 2)}</pre>}\n      {err && <pre style={{ color: \"crimson\" }}>{err}</pre>}\n    </section>\n  );\n}\n\nfunction OneShotForm({ onComplete }: { onComplete?: () => void }) {\n  const [file, setFile] = useState<File | null>(null);\n  const [registryAddress, setRegistryAddress] = useState(\"\");\n  const [platform, setPlatform] = useState(\"youtube\");\n  const [platformId, setPlatformId] = useState(\"\");\n  const [bindingsJson, setBindingsJson] = useState<string>(\n    `[{ \"platform\": \"youtube\", \"platformId\": \"VIDEO_ID\" }]`\n  );\n  const [platformSelect, setPlatformSelect] = useState<string>(\"youtube\");\n  const [platformUrl, setPlatformUrl] = useState<string>(\"\");\n  type LinkRow = { platform: string; url: string };\n  const [linkRows, setLinkRows] = useState<LinkRow[]>([]);\n  const [result, setResult] = useState<any>(null);\n  const [err, setErr] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [uploadContent, setUploadContent] = useState<boolean>(false);\n  // Prefill registry if available\n  useEffect(() => {\n    getJson<{ registryAddress: string; chainId: number }>(\"/api/registry\")\n      .then((r) => setRegistryAddress((prev) => prev || r.registryAddress))\n      .catch(() => {});\n  }, []);\n  // Auto-generate bindings JSON from dropdown + URL\n  useEffect(() => {\n    const items: Array<{ platform: string; platformId: string }> = [];\n    if (platformUrl)\n      items.push({ platform: platformSelect, platformId: platformUrl });\n    for (const r of linkRows) {\n      if (r.url) items.push({ platform: r.platform, platformId: r.url });\n    }\n    if (items.length > 0) setBindingsJson(JSON.stringify(items, null, 2));\n  }, [platformSelect, platformUrl, linkRows]);\n  return (\n    <section>\n      <h2>One-shot: Upload → Manifest → Register</h2>\n      <label>Registry address</label>\n      <input\n        value={registryAddress}\n        onChange={(e) => setRegistryAddress(e.target.value)}\n        placeholder=\"0x...\"\n      />\n      <div\n        className=\"row\"\n        style={{\n          margin: \"8px 0\",\n          display: \"flex\",\n          gap: 8,\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        <label>Platform</label>\n        <select\n          value={platformSelect}\n          onChange={(e) => setPlatformSelect(e.target.value)}\n        >\n          {[\n            \"youtube\",\n            \"tiktok\",\n            \"instagram\",\n            \"x\",\n            \"twitter\",\n            \"vimeo\",\n            \"twitch\",\n            \"facebook\",\n            \"reddit\",\n            \"pinterest\",\n            \"dailymotion\",\n            \"rumble\",\n            \"bilibili\",\n            \"douyin\",\n            \"kuaishou\",\n            \"weibo\",\n            \"threads\",\n            \"bluesky\",\n            \"mastodon\",\n          ].map((opt) => (\n            <option key={opt} value={opt}>\n              {opt}\n            </option>\n          ))}\n        </select>\n        <input\n          value={platformUrl}\n          onChange={(e) => setPlatformUrl(e.target.value)}\n          placeholder=\"Paste a link to your video/post\"\n          style={{ flex: 1, minWidth: 280 }}\n        />\n        <div style={{ fontSize: 12, color: \"#666\" }}>\n          This will auto-generate the Bindings JSON below.\n        </div>\n      </div>\n      <div className=\"row\" style={{ margin: \"8px 0\", display: \"grid\", gap: 8 }}>\n        <div style={{ fontWeight: 600 }}>Additional links</div>\n        {linkRows.map((row: LinkRow, idx: number) => (\n          <div\n            key={idx}\n            style={{\n              display: \"flex\",\n              gap: 8,\n              alignItems: \"center\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            <select\n              value={row.platform}\n              onChange={(e) => {\n                const v = e.target.value;\n                setLinkRows((arr: LinkRow[]) =>\n                  arr.map((r: LinkRow, i: number) =>\n                    i === idx ? { ...r, platform: v } : r\n                  )\n                );\n              }}\n            >\n              {PLATFORM_OPTIONS.map((opt) => (\n                <option key={opt} value={opt}>\n                  {opt}\n                </option>\n              ))}\n            </select>\n            <input\n              value={row.url}\n              onChange={(e) => {\n                const v = e.target.value;\n                setLinkRows((arr: LinkRow[]) =>\n                  arr.map((r: LinkRow, i: number) =>\n                    i === idx ? { ...r, url: v } : r\n                  )\n                );\n              }}\n              placeholder=\"Paste a link to your video/post\"\n              style={{ flex: 1, minWidth: 260 }}\n            />\n            <button\n              type=\"button\"\n              title=\"Remove\"\n              onClick={() =>\n                setLinkRows((arr: LinkRow[]) =>\n                  arr.filter((_: LinkRow, i: number) => i !== idx)\n                )\n              }\n              style={{ padding: \"4px 8px\" }}\n            >\n              −\n            </button>\n            {idx === linkRows.length - 1 && (\n              <button\n                type=\"button\"\n                title=\"Add another\"\n                onClick={() =>\n                  setLinkRows((arr: LinkRow[]) => [\n                    ...arr,\n                    { platform: \"youtube\", url: \"\" },\n                  ])\n                }\n                style={{ padding: \"4px 8px\" }}\n              >\n                +\n              </button>\n            )}\n          </div>\n        ))}\n        {linkRows.length === 0 && (\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => setLinkRows([{ platform: \"youtube\", url: \"\" }])}\n            >\n              + Add a link\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"row\" style={{ margin: \"8px 0\" }}>\n        <label>Bindings JSON (optional)</label>\n        <textarea\n          value={bindingsJson}\n          onChange={(e) => setBindingsJson(e.target.value)}\n          placeholder='[ { \"platform\": \"youtube\", \"platformId\": \"VIDEO_ID\" } ]'\n          rows={4}\n          style={{ width: \"100%\", fontFamily: \"monospace\" }}\n        />\n        <div style={{ fontSize: 12, color: \"#666\" }}>\n          Provide an array of bindings. Each item:{\" \"}\n          <code>\n            {'{ \"platform\": \"platform-name\", \"platformId\": \"id-or-url\" }'}\n          </code>\n          . Absolute URLs are accepted.\n        </div>\n      </div>\n      <div className=\"row\" style={{ margin: \"8px 0\" }}>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={uploadContent}\n            onChange={(e) => setUploadContent(e.target.checked)}\n          />{\" \"}\n          Upload video to IPFS (optional)\n        </label>\n      </div>\n      <label>File</label>\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files?.[0] || null)}\n      />\n      <button\n        disabled={!file || !registryAddress || loading}\n        onClick={async () => {\n          try {\n            setErr(null);\n            setLoading(true);\n            const fd = new FormData();\n            if (!file) return;\n            fd.append(\"file\", file);\n            fd.append(\"registryAddress\", registryAddress);\n            fd.append(\"uploadContent\", String(uploadContent));\n            if (platform && platformId) {\n              fd.append(\"platform\", platform);\n              fd.append(\"platformId\", platformId);\n            }\n            if (bindingsJson) {\n              fd.append(\"bindings\", bindingsJson);\n            }\n            // Use authenticated proxy to enforce ownership checks\n            const res = await fetch(`/api/app/one-shot`, {\n              method: \"POST\",\n              body: fd,\n            });\n            if (!res.ok) throw new Error(await res.text());\n            const r = await res.json();\n            setResult(r);\n            onComplete?.();\n          } catch (e: any) {\n            setErr(e?.message || String(e));\n          } finally {\n            setLoading(false);\n          }\n        }}\n      >\n        {loading ? \"Running...\" : \"Run one-shot\"}\n      </button>\n      {result && (\n        <div>\n          <h3>Result</h3>\n          <div>\n            <b>contentCid:</b> {result.contentCid}\n            <CopyButton text={result.contentCid} label=\"contentCid\" />\n          </div>\n          <div>\n            <b>contentUri:</b> {result.contentUri}{\" \"}\n            {ipfsToGateway(result.contentUri) && (\n              <a\n                href={ipfsToGateway(result.contentUri)}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                (view)\n              </a>\n            )}\n            <CopyButton text={result.contentUri} label=\"contentUri\" />\n          </div>\n          <div>\n            <b>contentHash:</b> {result.contentHash}\n            <CopyButton text={result.contentHash} label=\"contentHash\" />\n          </div>\n          <div>\n            <b>manifestCid:</b> {result.manifestCid}\n            <CopyButton text={result.manifestCid} label=\"manifestCid\" />\n          </div>\n          <div>\n            <b>manifestURI:</b> {result.manifestURI}{\" \"}\n            {ipfsToGateway(result.manifestURI) && (\n              <a\n                href={ipfsToGateway(result.manifestURI)}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                (view)\n              </a>\n            )}\n            <CopyButton text={result.manifestURI} label=\"manifestURI\" />\n          </div>\n          <div>\n            <b>txHash:</b> {result.txHash}{\" \"}\n            {explorerTxUrl(result.chainId, result.txHash) && (\n              <a\n                href={explorerTxUrl(result.chainId, result.txHash)}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                (explorer)\n              </a>\n            )}\n            <CopyButton text={result.txHash} label=\"txHash\" />\n          </div>\n          {result.bindTxHash && (\n            <div>\n              <b>bindTxHash:</b> {result.bindTxHash}{\" \"}\n              {explorerTxUrl(result.chainId, result.bindTxHash) && (\n                <a\n                  href={explorerTxUrl(result.chainId, result.bindTxHash)}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  (explorer)\n                </a>\n              )}\n              <CopyButton text={result.bindTxHash} label=\"bindTxHash\" />\n            </div>\n          )}\n          {result.chainId != null && (\n            <div>\n              <b>chainId:</b> {result.chainId}\n            </div>\n          )}\n          {Array.isArray(result.bindTxHashes) &&\n            result.bindTxHashes.length > 0 && (\n              <div>\n                <b>bindTxHashes:</b>\n                <ul>\n                  {result.bindTxHashes.map((h: string, i: number) => (\n                    <li key={i}>\n                      {h}{\" \"}\n                      {explorerTxUrl(result.chainId, h) && (\n                        <a\n                          href={explorerTxUrl(result.chainId, h)}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          (explorer)\n                        </a>\n                      )}\n                      <CopyButton text={h} label={`bindTxHash #${i + 1}`} />\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n        </div>\n      )}\n      {result && (\n        <div style={{ marginTop: 16 }}>\n          <h3>Share</h3>\n          {(() => {\n            const siteBase =\n              process.env.NEXT_PUBLIC_SITE_BASE ||\n              (typeof window !== \"undefined\" ? window.location.origin : \"\");\n            const badgeUrl = `${siteBase}/api/badge/${\n              result.contentHash || \"\"\n            }`;\n            let bindings: Array<{ platform: string; platformId: string }> = [];\n            try {\n              const arr = JSON.parse(bindingsJson);\n              if (Array.isArray(arr)) {\n                bindings = arr\n                  .filter((b: any) => b && b.platform && b.platformId)\n                  .map((b: any) => ({\n                    platform: String(b.platform),\n                    platformId: String(b.platformId),\n                  }));\n              }\n            } catch {}\n            // Fallback to primary dropdown + url if no JSON parsed\n            if (bindings.length === 0 && platformSelect && platformUrl) {\n              bindings = [\n                { platform: platformSelect, platformId: platformUrl },\n              ];\n            }\n            // Build a copy-all bundle string\n            const lines: string[] = [];\n            lines.push(\"Verified on-chain\");\n            if (result.contentHash)\n              lines.push(`Content hash: ${result.contentHash}`);\n            lines.push(`Badge: ${badgeUrl}`);\n            if (Array.isArray(bindings) && bindings.length) {\n              lines.push(\"\", \"Links:\");\n              for (const b of bindings) {\n                const shareUrl = `${siteBase}/verify?platform=${encodeURIComponent(\n                  b.platform\n                )}&platformId=${encodeURIComponent(b.platformId)}`;\n                const qrUrl = `${siteBase}/api/qr?url=${encodeURIComponent(\n                  shareUrl\n                )}`;\n                const embedHtml = `<a href=\"${shareUrl}\" target=\"_blank\" rel=\"noopener\"><img alt=\"Verified\" src=\"${badgeUrl}\" /></a>`;\n                lines.push(\n                  `- ${b.platform}: ${b.platformId}`,\n                  `  share: ${shareUrl}`,\n                  `  qr: ${qrUrl}`,\n                  `  embed: ${embedHtml}`\n                );\n              }\n            }\n            const copyAll = lines.join(\"\\n\");\n            return (\n              <div style={{ display: \"grid\", gap: 8 }}>\n                <div>\n                  <CopyButton text={copyAll} label=\"share bundle\" />\n                </div>\n                <div>\n                  <div style={{ fontWeight: 600 }}>Badge</div>\n                  <div>\n                    <a href={badgeUrl} target=\"_blank\" rel=\"noreferrer\">\n                      {badgeUrl}\n                    </a>\n                    <CopyButton text={badgeUrl} label=\"badge URL\" />\n                  </div>\n                </div>\n                {bindings.length > 0 ? (\n                  <div style={{ display: \"grid\", gap: 8 }}>\n                    <div style={{ fontWeight: 600 }}>Per-link share</div>\n                    <ul>\n                      {bindings.map((b, i) => {\n                        const shareUrl = `${siteBase}/verify?platform=${encodeURIComponent(\n                          b.platform\n                        )}&platformId=${encodeURIComponent(b.platformId)}`;\n                        const qrUrl = `${siteBase}/api/qr?url=${encodeURIComponent(\n                          shareUrl\n                        )}`;\n                        const embedHtml = `<a href=\"${shareUrl}\" target=\"_blank\" rel=\"noopener\"><img alt=\"Verified\" src=\"${badgeUrl}\" /></a>`;\n                        return (\n                          <li\n                            key={`${b.platform}-${i}`}\n                            style={{ marginBottom: 8 }}\n                          >\n                            <div>\n                              <b>{b.platform}:</b> {b.platformId}\n                            </div>\n                            <div>\n                              Link:{\" \"}\n                              <a\n                                href={shareUrl}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                              >\n                                {shareUrl}\n                              </a>\n                              <CopyButton\n                                text={shareUrl}\n                                label={`share link #${i + 1}`}\n                              />\n                            </div>\n                            <div>\n                              Embed HTML:{\" \"}\n                              <CopyButton\n                                text={embedHtml}\n                                label={`embed HTML #${i + 1}`}\n                              />\n                            </div>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                gap: 8,\n                              }}\n                            >\n                              <span>QR:</span>\n                              <img\n                                src={qrUrl}\n                                alt=\"QR\"\n                                width={96}\n                                height={96}\n                              />\n                            </div>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                ) : (\n                  <div style={{ color: \"#666\" }}>\n                    Add a platform link above to generate share links.\n                  </div>\n                )}\n              </div>\n            );\n          })()}\n        </div>\n      )}\n      {err && <pre style={{ color: \"crimson\" }}>{err}</pre>}\n    </section>\n  );\n}\n\nfunction ManifestForm() {\n  const [file, setFile] = useState<File | null>(null);\n  const [contentUri, setContentUri] = useState<string>(\"\");\n  const [doUpload, setDoUpload] = useState<boolean>(true);\n  const [result, setResult] = useState<any>(null);\n  const [err, setErr] = useState<string | null>(null);\n  return (\n    <section>\n      <h2>Create manifest</h2>\n      <label>Content URI (ipfs://...)</label>\n      <input\n        value={contentUri}\n        onChange={(e) => setContentUri(e.target.value)}\n        placeholder=\"ipfs://<CID>\"\n      />\n      <label>File</label>\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files?.[0] || null)}\n      />\n      <div className=\"row\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={doUpload}\n            onChange={(e) => setDoUpload(e.target.checked)}\n          />{\" \"}\n          Upload manifest to IPFS\n        </label>\n      </div>\n      <button\n        disabled={!file || !contentUri}\n        onClick={async () => {\n          try {\n            setErr(null);\n            const fd = new FormData();\n            if (!file) return;\n            fd.append(\"file\", file);\n            fd.append(\"contentUri\", contentUri);\n            fd.append(\"upload\", String(doUpload));\n            const r = await postMultipart(\"/api/manifest\", fd);\n            setResult(r);\n          } catch (e: any) {\n            setErr(e?.message || String(e));\n          }\n        }}\n      >\n        Create\n      </button>\n      {result && <pre>{JSON.stringify(result, null, 2)}</pre>}\n      {err && <pre style={{ color: \"crimson\" }}>{err}</pre>}\n    </section>\n  );\n}\n\nfunction RegisterForm() {\n  const [file, setFile] = useState<File | null>(null);\n  const [manifestURI, setManifestURI] = useState<string>(\"\");\n  const [registryAddress, setRegistryAddress] = useState<string>(\"\");\n  const [result, setResult] = useState<any>(null);\n  const [err, setErr] = useState<string | null>(null);\n  return (\n    <section>\n      <h2>Register on-chain</h2>\n      <label>Registry address</label>\n      <input\n        value={registryAddress}\n        onChange={(e) => setRegistryAddress(e.target.value)}\n        placeholder=\"0x...\"\n      />\n      <label>Manifest URI</label>\n      <input\n        value={manifestURI}\n        onChange={(e) => setManifestURI(e.target.value)}\n        placeholder=\"ipfs://<manifestCID>\"\n      />\n      <label>File</label>\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files?.[0] || null)}\n      />\n      <button\n        disabled={!file || !manifestURI || !registryAddress}\n        onClick={async () => {\n          try {\n            setErr(null);\n            const fd = new FormData();\n            if (!file) return;\n            fd.append(\"file\", file);\n            fd.append(\"manifestURI\", manifestURI);\n            fd.append(\"registryAddress\", registryAddress);\n            const r = await postMultipart(\"/api/register\", fd);\n            setResult(r);\n          } catch (e: any) {\n            setErr(e?.message || String(e));\n          }\n        }}\n      >\n        Register\n      </button>\n      {result && <pre>{JSON.stringify(result, null, 2)}</pre>}\n      {err && <pre style={{ color: \"crimson\" }}>{err}</pre>}\n    </section>\n  );\n}\n\nfunction VerifyForm() {\n  const [file, setFile] = useState<File | null>(null);\n  const [manifestURI, setManifestURI] = useState<string>(\"\");\n  const [registryAddress, setRegistryAddress] = useState<string>(\"\");\n  const [result, setResult] = useState<any>(null);\n  const [err, setErr] = useState<string | null>(null);\n  return (\n    <section>\n      <h2>Verify</h2>\n      <label>Registry address</label>\n      <input\n        value={registryAddress}\n        onChange={(e) => setRegistryAddress(e.target.value)}\n        placeholder=\"0x...\"\n      />\n      <label>Manifest URI</label>\n      <input\n        value={manifestURI}\n        onChange={(e) => setManifestURI(e.target.value)}\n        placeholder=\"ipfs://<manifestCID>\"\n      />\n      <label>File</label>\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files?.[0] || null)}\n      />\n      <button\n        disabled={!file || !manifestURI || !registryAddress}\n        onClick={async () => {\n          try {\n            setErr(null);\n            const fd = new FormData();\n            if (!file) return;\n            fd.append(\"file\", file);\n            fd.append(\"manifestURI\", manifestURI);\n            fd.append(\"registryAddress\", registryAddress);\n            const r = await postMultipart(\"/api/verify\", fd);\n            setResult(r);\n          } catch (e: any) {\n            setErr(e?.message || String(e));\n          }\n        }}\n      >\n        Verify\n      </button>\n      {result && <pre>{JSON.stringify(result, null, 2)}</pre>}\n      {err && <pre style={{ color: \"crimson\" }}>{err}</pre>}\n    </section>\n  );\n}\n\nfunction ProofForm() {\n  const [file, setFile] = useState<File | null>(null);\n  const [manifestURI, setManifestURI] = useState<string>(\"\");\n  const [registryAddress, setRegistryAddress] = useState<string>(\"\");\n  const [result, setResult] = useState<any>(null);\n  const [err, setErr] = useState<string | null>(null);\n  return (\n    <section>\n      <h2>Proof</h2>\n      <label>Registry address</label>\n      <input\n        value={registryAddress}\n        onChange={(e) => setRegistryAddress(e.target.value)}\n        placeholder=\"0x...\"\n      />\n      <label>Manifest URI</label>\n      <input\n        value={manifestURI}\n        onChange={(e) => setManifestURI(e.target.value)}\n        placeholder=\"ipfs://<manifestCID>\"\n      />\n      <label>File</label>\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files?.[0] || null)}\n      />\n      <button\n        disabled={!file || !manifestURI || !registryAddress}\n        onClick={async () => {\n          try {\n            setErr(null);\n            const fd = new FormData();\n            if (!file) return;\n            fd.append(\"file\", file);\n            fd.append(\"manifestURI\", manifestURI);\n            fd.append(\"registryAddress\", registryAddress);\n            const r = await postMultipart(\"/api/proof\", fd);\n            setResult(r);\n          } catch (e: any) {\n            setErr(e?.message || String(e));\n          }\n        }}\n      >\n        Generate\n      </button>\n      {result && <pre>{JSON.stringify(result, null, 2)}</pre>}\n      {err && <pre style={{ color: \"crimson\" }}>{err}</pre>}\n    </section>\n  );\n}\n\nfunction BindForm() {\n  const [registryAddress, setRegistryAddress] = useState(\"\");\n  const [platform, setPlatform] = useState(\"youtube\");\n  const [platformId, setPlatformId] = useState(\"\");\n  const [contentHash, setContentHash] = useState(\"\");\n  const [bindingsJson, setBindingsJson] = useState<string>(\n    `[{ \"platform\": \"youtube\", \"platformId\": \"VIDEO_ID\" }]`\n  );\n  const [platformSelect, setPlatformSelect] = useState<string>(\"youtube\");\n  const [platformUrl, setPlatformUrl] = useState<string>(\"\");\n  const [result, setResult] = useState<any>(null);\n  const [err, setErr] = useState<string | null>(null);\n  useEffect(() => {\n    getJson<{ registryAddress: string; chainId: number }>(\"/api/registry\")\n      .then((r) => setRegistryAddress((prev) => prev || r.registryAddress))\n      .catch(() => {});\n  }, []);\n  useEffect(() => {\n    if (!platformUrl) return;\n    const item = { platform: platformSelect, platformId: platformUrl };\n    setBindingsJson(JSON.stringify([item], null, 2));\n  }, [platformSelect, platformUrl]);\n  return (\n    <section>\n      <h2>Bind Platform</h2>\n      <p>\n        Bind a platform ID (e.g., YouTube videoId) to a registered content hash.\n      </p>\n      <label>Registry address</label>\n      <input\n        value={registryAddress}\n        onChange={(e) => setRegistryAddress(e.target.value)}\n        placeholder=\"0x...\"\n      />\n      <label>Platform</label>\n      <select\n        value={platformSelect}\n        onChange={(e) => setPlatformSelect(e.target.value)}\n      >\n        {[\n          \"youtube\",\n          \"tiktok\",\n          \"instagram\",\n          \"x\",\n          \"twitter\",\n          \"vimeo\",\n          \"twitch\",\n          \"facebook\",\n          \"reddit\",\n          \"pinterest\",\n          \"dailymotion\",\n          \"rumble\",\n          \"bilibili\",\n          \"douyin\",\n          \"kuaishou\",\n          \"weibo\",\n          \"threads\",\n          \"bluesky\",\n          \"mastodon\",\n        ].map((opt) => (\n          <option key={opt} value={opt}>\n            {opt}\n          </option>\n        ))}\n      </select>\n      <label>Platform URL or ID</label>\n      <input\n        value={platformUrl}\n        onChange={(e) => setPlatformUrl(e.target.value)}\n        placeholder=\"Paste a link to your video/post\"\n      />\n      <div className=\"row\" style={{ marginTop: 8 }}>\n        <label>Bindings JSON (optional for multiple)</label>\n        <textarea\n          value={bindingsJson}\n          onChange={(e) => setBindingsJson(e.target.value)}\n          placeholder='[ { \"platform\": \"youtube\", \"platformId\": \"VIDEO_ID\" } ]'\n          rows={4}\n          style={{ width: \"100%\", fontFamily: \"monospace\" }}\n        />\n        <div style={{ fontSize: 12, color: \"#666\" }}>\n          Leave empty to use single Platform/Platform ID fields above; otherwise\n          supply an array to bind multiple in one request.\n        </div>\n      </div>\n      <label>Content Hash</label>\n      <input\n        value={contentHash}\n        onChange={(e) => setContentHash(e.target.value)}\n        placeholder=\"0x... (bytes32)\"\n      />\n      <button\n        disabled={!registryAddress || !contentHash}\n        onClick={async () => {\n          try {\n            setErr(null);\n            let r: any;\n            if (bindingsJson && bindingsJson.trim().length > 0) {\n              const res = await fetch(`/api/app/bind-many`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                  registryAddress,\n                  contentHash,\n                  bindings: bindingsJson,\n                }),\n              });\n              if (!res.ok) throw new Error(await res.text());\n              r = await res.json();\n            } else {\n              const res = await fetch(`/api/app/bind`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                  registryAddress,\n                  platform,\n                  platformId,\n                  contentHash,\n                }),\n              });\n              if (!res.ok) throw new Error(await res.text());\n              r = await res.json();\n            }\n            setResult(r);\n          } catch (e: any) {\n            setErr(e?.message || String(e));\n          }\n        }}\n      >\n        Bind\n      </button>\n      {result && <pre>{JSON.stringify(result, null, 2)}</pre>}\n      {err && <pre style={{ color: \"crimson\" }}>{err}</pre>}\n    </section>\n  );\n}\n\nfunction BrowseContents({\n  refreshKey = 0,\n  chainId,\n}: {\n  refreshKey?: number;\n  chainId?: number;\n}) {\n  const [items, setItems] = useState<any[]>([]);\n  const [err, setErr] = useState<string | null>(null);\n  const fetchItems = async () => {\n    const r = await getJson<any[]>(\"/api/contents\");\n    setItems(r);\n  };\n  useEffect(() => {\n    fetchItems().catch((e) => setErr(e?.message || String(e)));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [refreshKey]);\n  return (\n    <section>\n      <h2>Browse Contents</h2>\n      <button\n        onClick={async () => {\n          try {\n            setErr(null);\n            await fetchItems();\n          } catch (e: any) {\n            setErr(e?.message || String(e));\n          }\n        }}\n      >\n        Refresh\n      </button>\n      {err && <pre style={{ color: \"crimson\" }}>{err}</pre>}\n      <ul>\n        {items.map((c) => (\n          <li key={c.id}>\n            <div>\n              <b>hash:</b> {c.contentHash}\n            </div>\n            {c.manifestUri && (\n              <div>\n                <b>manifest:</b> {c.manifestUri}{\" \"}\n                {ipfsToGateway(c.manifestUri) && (\n                  <a\n                    href={ipfsToGateway(c.manifestUri)}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    (view)\n                  </a>\n                )}\n                <CopyButton text={c.manifestUri} label=\"manifestURI\" />\n              </div>\n            )}\n            {c.registryAddress && (\n              <div>\n                <b>registry:</b> {c.registryAddress}{\" \"}\n                {explorerAddressUrl(chainId, c.registryAddress) && (\n                  <a\n                    href={explorerAddressUrl(chainId, c.registryAddress)}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    (explorer)\n                  </a>\n                )}\n                <CopyButton text={c.registryAddress} label=\"registry\" />\n              </div>\n            )}\n            {c.txHash && (\n              <div>\n                <b>tx:</b> {c.txHash}{\" \"}\n                {explorerTxUrl(chainId, c.txHash) && (\n                  <a\n                    href={explorerTxUrl(chainId, c.txHash)}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    (explorer)\n                  </a>\n                )}\n                <CopyButton text={c.txHash} label=\"txHash\" />\n              </div>\n            )}\n            {Array.isArray((c as any).bindings) &&\n              (c as any).bindings.length > 0 && (\n                <div>\n                  <b>bindings:</b>\n                  <ul>\n                    {(c as any).bindings.map((b: any) => {\n                      const href = platformBindingUrl(b.platform, b.platformId);\n                      return (\n                        <li key={b.id}>\n                          {b.platform}: {b.platformId}{\" \"}\n                          {href && (\n                            <a href={href} target=\"_blank\" rel=\"noreferrer\">\n                              (open)\n                            </a>\n                          )}\n                          <CopyButton\n                            text={b.platformId}\n                            label={`${b.platform} id`}\n                          />\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              )}\n            <VerifyInline\n              manifestUri={c.manifestUri}\n              registryAddress={c.registryAddress}\n            />\n            <ShareBlock\n              contentHash={c.contentHash}\n              bindings={(c as any).bindings || []}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nfunction VerifyInline({\n  manifestUri,\n  registryAddress,\n}: {\n  manifestUri?: string;\n  registryAddress?: string;\n}) {\n  const [file, setFile] = useState<File | null>(null);\n  const [result, setResult] = useState<any>(null);\n  const [err, setErr] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const canVerify = Boolean(file && manifestUri && registryAddress);\n  return (\n    <div style={{ marginTop: 8, paddingTop: 8, borderTop: \"1px solid #eee\" }}>\n      <div style={{ marginBottom: 4 }}>Inline Verify</div>\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files?.[0] || null)}\n      />\n      <button\n        disabled={!canVerify || loading}\n        onClick={async () => {\n          try {\n            setErr(null);\n            setLoading(true);\n            if (!file || !manifestUri || !registryAddress) return;\n            const fd = new FormData();\n            fd.append(\"file\", file);\n            fd.append(\"manifestURI\", manifestUri);\n            fd.append(\"registryAddress\", registryAddress);\n            const r = await postMultipart(\"/api/verify\", fd);\n            setResult(r);\n          } catch (e: any) {\n            setErr(e?.message || String(e));\n          } finally {\n            setLoading(false);\n          }\n        }}\n      >\n        {loading ? \"Verifying...\" : \"Verify\"}\n      </button>\n      {result && (\n        <div>\n          <b>status:</b> {result.status}\n        </div>\n      )}\n      {err && <div style={{ color: \"crimson\" }}>{err}</div>}\n    </div>\n  );\n}\n\nfunction ShareBlock({\n  contentHash,\n  bindings,\n}: {\n  contentHash?: string;\n  bindings?: Array<{ platform: string; platformId: string }>;\n}) {\n  const [theme, setTheme] = useState<\"dark\" | \"light\">(\"dark\");\n  const [width, setWidth] = useState<number>(240);\n  const siteBase =\n    (typeof process !== \"undefined\" && process.env.NEXT_PUBLIC_SITE_BASE) ||\n    (typeof window !== \"undefined\" ? window.location.origin : \"\");\n  if (!contentHash) return null;\n  const badgeUrl = `${siteBase}/api/badge/${contentHash}?theme=${theme}&w=${width}`;\n  const list = Array.isArray(bindings) ? bindings : [];\n  // Build copy-all bundle\n  const bundleLines: string[] = [];\n  bundleLines.push(\"Verified on-chain\");\n  bundleLines.push(`Content hash: ${contentHash}`);\n  bundleLines.push(`Badge: ${badgeUrl}`);\n  if (list.length) {\n    bundleLines.push(\"\", \"Links:\");\n    for (const b of list) {\n      const shareUrl = `${siteBase}/verify?platform=${encodeURIComponent(\n        b.platform\n      )}&platformId=${encodeURIComponent(b.platformId)}`;\n      const qrUrl = `${siteBase}/api/qr?url=${encodeURIComponent(shareUrl)}`;\n      const embedHtml = `<a href=\"${shareUrl}\" target=\"_blank\" rel=\"noopener\"><img alt=\"Verified\" src=\"${badgeUrl}\" /></a>`;\n      bundleLines.push(\n        `- ${b.platform}: ${b.platformId}`,\n        `  share: ${shareUrl}`,\n        `  qr: ${qrUrl}`,\n        `  embed: ${embedHtml}`\n      );\n    }\n  }\n  const copyAll = bundleLines.join(\"\\n\");\n  return (\n    <div style={{ marginTop: 8, paddingTop: 8, borderTop: \"1px dashed #ddd\" }}>\n      <div\n        style={{\n          display: \"flex\",\n          gap: 12,\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        <b>Share</b>\n        <CopyButton text={copyAll} label=\"share bundle\" />\n        <label>\n          Theme:{\" \"}\n          <select\n            value={theme}\n            onChange={(e) => setTheme((e.target.value as any) || \"dark\")}\n          >\n            <option value=\"dark\">dark</option>\n            <option value=\"light\">light</option>\n          </select>\n        </label>\n        <label>\n          Width:{\" \"}\n          <input\n            type=\"number\"\n            min={120}\n            max={640}\n            value={width}\n            onChange={(e) =>\n              setWidth(\n                Math.max(\n                  120,\n                  Math.min(640, parseInt(e.target.value || \"240\", 10))\n                )\n              )\n            }\n            style={{ width: 90 }}\n          />\n          px\n        </label>\n      </div>\n      <div style={{ marginTop: 6 }}>\n        <div style={{ fontWeight: 600 }}>Badge</div>\n        <div>\n          <a href={badgeUrl} target=\"_blank\" rel=\"noreferrer\">\n            {badgeUrl}\n          </a>\n          <CopyButton text={badgeUrl} label=\"badge URL\" />\n        </div>\n      </div>\n      {list.length > 0 ? (\n        <div style={{ marginTop: 8 }}>\n          <div style={{ fontWeight: 600 }}>Per-link share</div>\n          <ul>\n            {list.map((b, i) => {\n              const shareUrl = `${siteBase}/verify?platform=${encodeURIComponent(\n                b.platform\n              )}&platformId=${encodeURIComponent(b.platformId)}`;\n              const qrUrl = `${siteBase}/api/qr?url=${encodeURIComponent(\n                shareUrl\n              )}`;\n              const embedHtml = `<a href=\"${shareUrl}\" target=\"_blank\" rel=\"noopener\"><img alt=\"Verified\" src=\"${badgeUrl}\" /></a>`;\n              return (\n                <li key={`${b.platform}-${i}`} style={{ marginBottom: 6 }}>\n                  <div>\n                    <b>{b.platform}:</b> {b.platformId}\n                  </div>\n                  <div>\n                    Link:{\" \"}\n                    <a href={shareUrl} target=\"_blank\" rel=\"noreferrer\">\n                      {shareUrl}\n                    </a>\n                    <CopyButton\n                      text={shareUrl}\n                      label={`share link #${i + 1}`}\n                    />\n                  </div>\n                  <div>\n                    Embed HTML:{\" \"}\n                    <CopyButton\n                      text={embedHtml}\n                      label={`embed HTML #${i + 1}`}\n                    />\n                  </div>\n                  <div\n                    style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}\n                  >\n                    <span>QR:</span>\n                    <img src={qrUrl} alt=\"QR\" width={72} height={72} />\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      ) : (\n        <div style={{ marginTop: 8, color: \"#666\" }}>\n          No bindings yet — bind a platform to generate share links.\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction VerificationsView() {\n  const [contentHash, setContentHash] = useState(\"\");\n  const [limit, setLimit] = useState(50);\n  const [items, setItems] = useState<any[]>([]);\n  const [err, setErr] = useState<string | null>(null);\n  return (\n    <section>\n      <h2>Verifications</h2>\n      <label>Content Hash</label>\n      <input\n        value={contentHash}\n        onChange={(e) => setContentHash(e.target.value)}\n        placeholder=\"0x... (optional)\"\n      />\n      <label>Limit</label>\n      <input\n        type=\"number\"\n        value={limit}\n        onChange={(e) => setLimit(parseInt(e.target.value || \"0\", 10))}\n        min={1}\n        max={100}\n      />\n      <button\n        onClick={async () => {\n          try {\n            setErr(null);\n            const qs = new URLSearchParams();\n            if (contentHash) qs.set(\"contentHash\", contentHash);\n            if (limit) qs.set(\"limit\", String(limit));\n            const r = await getJson<any[]>(\n              `/api/verifications?${qs.toString()}`\n            );\n            setItems(r);\n          } catch (e: any) {\n            setErr(e?.message || String(e));\n          }\n        }}\n      >\n        Fetch\n      </button>\n      {err && <pre style={{ color: \"crimson\" }}>{err}</pre>}\n      <ul>\n        {items.map((v) => (\n          <li key={v.id}>\n            <div>\n              <b>status:</b> {v.status} <b>hash:</b> {v.contentHash}\n            </div>\n            <div>\n              <b>recovered:</b> {v.recoveredAddress} <b>onchain:</b>{\" \"}\n              {v.creatorOnchain}\n            </div>\n            <div>\n              <b>manifest:</b> {v.manifestUri}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}